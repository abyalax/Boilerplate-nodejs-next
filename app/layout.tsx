/* eslint-disable no-unused-vars */
import "./globals.css";

import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { ReactNode } from "react";

import { QueryKey } from "~/common/const/querykey";
import { Providers } from "~/components/provider/application";
import { Permission, Role } from "~/db/schema";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Next Application",
  description: "Generated by create next app",
};

declare module "next-auth" {
  interface UserRole {
    id: number;
    name: string;
  }

  interface UserPermission {
    id: number;
    key: string;
    name: string;
  }

  interface User {
    id: number;
    roles: UserRole[];
    permissions: UserPermission[];
  }

  interface Session {
    user: {
      id: number;
      name?: string | null;
      email?: string | null;
      image?: string | null;
      roles?: UserRole[];
      permissions?: UserPermission[];
    };
  }
}

declare module "next-auth/jwt" {
  interface JWT {
    id: number;
    roles?: Role[];
    permissions?: Permission[];
  }
}

declare module "@tanstack/react-query" {
  interface Register {
    mutationMeta: {
      invalidateQueries: QueryKey[];
    };
  }
}

export default function RootLayout({
  children,
}: Readonly<{
  children: ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Providers>{children}</Providers>
      </body>
    </html>
  );
}
